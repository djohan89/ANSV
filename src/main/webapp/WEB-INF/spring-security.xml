<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/admin/**">
        <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_CEO','ROLE_ADMIN_WEB','ROLE_ADMIN_COURSE')" />
        <form-login
                login-page="/login_admin"
                login-processing-url="/admin/j_spring_security_login"
                default-target-url="/login_success_admin"
                authentication-failure-url="/login_admin?message=error"
                username-parameter="username"
                password-parameter="password" />
        <logout logout-url="/admin/j_spring_security_logout"
                logout-success-url="/login_admin?message=logout" delete-cookies="JSESSIONID" />
    </http>


    <http>
        <intercept-url pattern="/user/khoa-hoc/**" access="hasAnyRole('ROLE_CEO','ROLE_USER','ROLE_ADMIN_WEB','ROLE_ADMIN_COURSE','ROLE_DF')" />
        <form-login
                login-page="/login_user"
                login-processing-url="/j_spring_security_login"
                default-target-url="/user/khoa-hoc/trang-chu"
                authentication-failure-url="/login_user?message=error"
                username-parameter="username"
                password-parameter="password" />
        <logout logout-url="/j_spring_security_logout"
                logout-success-url="/login_user?message=logout" delete-cookies="JSESSIONID" />
    </http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from users where username=?"
				authorities-by-username-query="select users.username, role.name from users, role, users_roles 
						where username =? and users.id = users_roles.user and users_roles.role = role.id " />
			<password-encoder ref="encoder" />
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>
	
</beans:beans>
